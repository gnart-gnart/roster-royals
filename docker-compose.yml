services:

  pgdb:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_CONTAINER_PORT}"
    env_file:
      - .env
    networks:
      - app_network
      

  django-web:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    restart: always
    depends_on:
      - pgdb
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      ENVIRONMENT: ${ENVIRONMENT}
      DEBUG: ${DEBUG}
      ENVIRONMENT_URL: ${ENVIRONMENT_URL_${ENVIRONMENT}}
      ENVIRONMENT_HOST: ${ENVIRONMENT_HOST_${ENVIRONMENT}}
      ENVIRONMENT_DEBUG: ${ENVIRONMENT_DEBUG_${ENVIRONMENT}}
    volumes:
      - ./backend:/app
    ports:
      - "${DJANGO_PORT}:${DJANGO_CONTAINER_PORT}"
    env_file:
      - .env
    networks:
      - app_network

  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL}
        - ENVIRONMENT=${ENVIRONMENT}
        - NODE_ENV=${NODE_ENV}
    restart: always
    depends_on:
      - django-web
    environment:
      NODE_ENV: ${NODE_ENV}
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      ENVIRONMENT: ${ENVIRONMENT}
      ENVIRONMENT_URL: ${ENVIRONMENT_URL_${ENVIRONMENT}}
      ENVIRONMENT_HOST: ${ENVIRONMENT_HOST_${ENVIRONMENT}}
      ENVIRONMENT_DEBUG: ${ENVIRONMENT_DEBUG_${ENVIRONMENT}}
    env_file:
      - .env
    volumes:
      - node_modules:/app/node_modules
      - ${ENVIRONMENT_VOLUMES:-./frontend:/app}
    ports:
      - "${REACT_PORT}:${REACT_CONTAINER_PORT}"
    stdin_open: true
    tty: true
    networks:
      - app_network
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT}
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ./nginx/production.conf.template:/etc/nginx/production.conf.template
      - ./nginx/development.conf.template:/etc/nginx/development.conf.template
    command: sh -c "envsubst < /etc/nginx/$$ENVIRONMENT.conf.template > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - SERVER_IP=${SERVER_IP}
      - ENVIRONMENT_HOST=${ENVIRONMENT_HOST_${ENVIRONMENT}}
    depends_on:
      - react-app
      - django-web
    networks:
      - app_network

volumes:
  postgres_data:
  node_modules:

networks:
  app_network:
    driver: bridge

