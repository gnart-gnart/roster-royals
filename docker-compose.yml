services:

  pgdb:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_CONTAINER_PORT}"
    env_file:
      - .env

  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   ports:
  #     - "${PGADMIN_PORT}:${PGADMIN_CONTAINER_PORT}"
  #   env_file:
  #     - .env

  django-web:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - pgdb
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./backend:/app
    ports:
      - "${DJANGO_PORT}:${DJANGO_CONTAINER_PORT}"
    env_file:
      - .env

  react-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - django-web
    environment:
      NODE_ENV: ${NODE_ENV}
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    env_file:
      - .env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${REACT_PORT}:${REACT_CONTAINER_PORT}"
    stdin_open: true
    tty: true

volumes:
  postgres_data:

