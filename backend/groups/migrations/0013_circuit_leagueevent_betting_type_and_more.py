# Generated by Django 4.2.19 on 2025-04-14 22:11

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('groups', '0012_add_missing_image_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='Circuit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('entry_fee', models.DecimalField(decimal_places=2, help_text='Entry fee in currency required to join the circuit.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('active', 'Active'), ('calculating', 'Calculating Results'), ('completed', 'Completed')], default='upcoming', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('captain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuits_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='leagueevent',
            name='betting_type',
            field=models.CharField(choices=[('standard', 'Standard'), ('tiebreaker_closest', 'Tiebreaker - Closest Guess'), ('tiebreaker_unique', 'Tiebreaker - Unique Guess')], default='standard', max_length=20),
        ),
        migrations.AddField(
            model_name='leagueevent',
            name='tiebreaker_correct_value',
            field=models.FloatField(blank=True, help_text="The correct numerical value for 'closest guess' tiebreakers after the event concludes.", null=True),
        ),
        migrations.AddField(
            model_name='userbet',
            name='league_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_bets', to='groups.leagueevent'),
        ),
        migrations.AddField(
            model_name='userbet',
            name='numeric_choice',
            field=models.FloatField(blank=True, help_text="User's numerical guess for tiebreaker events.", null=True),
        ),
        migrations.AddField(
            model_name='userbet',
            name='points_earned',
            field=models.IntegerField(default=0, help_text='Points earned for this bet in a circuit, considering weight.'),
        ),
        migrations.AlterField(
            model_name='userbet',
            name='result',
            field=models.CharField(choices=[('pending', 'Pending'), ('won', 'Won'), ('lost', 'Lost'), ('push', 'Push')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='userbet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CircuitComponentEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=1, help_text='Multiplier for points earned from this event within the circuit.', validators=[django.core.validators.MinValueValidator(1)])),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('circuit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.circuit')),
                ('league_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.leagueevent')),
            ],
            options={
                'ordering': ['added_at'],
                'unique_together': {('circuit', 'league_event')},
            },
        ),
        migrations.AddField(
            model_name='circuit',
            name='component_events',
            field=models.ManyToManyField(related_name='circuits_included_in', through='groups.CircuitComponentEvent', to='groups.leagueevent'),
        ),
        migrations.AddField(
            model_name='circuit',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuits', to='groups.league'),
        ),
        migrations.AddField(
            model_name='circuit',
            name='tiebreaker_event',
            field=models.ForeignKey(blank=True, help_text='The designated tiebreaker event. Must be one of the component events.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tiebreaker_for_circuits', to='groups.leagueevent'),
        ),
        migrations.AddField(
            model_name='circuit',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='circuits_won', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CircuitParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_entry', models.BooleanField(default=False)),
                ('score', models.IntegerField(default=0)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('circuit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='groups.circuit')),
                ('tiebreaker_bet', models.OneToOneField(blank=True, help_text="Link to the user's specific bet on the circuit's tiebreaker event.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tiebreaker_participant_link', to='groups.userbet')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuit_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-score', 'joined_at'],
                'unique_together': {('circuit', 'user')},
            },
        ),
    ]
